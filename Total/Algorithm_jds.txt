# Author: jds

def get_imudata():
    # i2c communication
    return imudata

def cal_position(imudata):
    # special algorithm
    return pos_xyz

def update_position():
    imudata = get_imudata()
    pos_xyz = cal_position(imudata)
    if (time = time + 1) > n:
        time = 0
        pos_xyz = visual_compensation(get_image())
    mapping(pos_xyz)

def get_image():
    return image

def visual_compensation(image):
    # special algorithm(1. position estimation 2. path planner)
    return pos_xyz

def obstacle(distance):
    if distance < 10:
        return True
    else:
        return False

def path_planning(pos_xyz):
    flag = 0
    for n in range(1, 3):
        if (obstacle(n)):
            flag = 1
            # drone control

    if(!flag):
        move()
        if (pos_xyz == pos_goal):
            land()

System():
    while(True):
        update_position()
        path_planning()
